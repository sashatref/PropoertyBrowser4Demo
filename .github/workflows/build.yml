name: Build project

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  windows:
    runs-on: windows-2019
    env:
      QT_PATH: ${{ github.workspace }}/Qt

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: "source-code"
        submodules: recursive
  
    - name: Install Qt
      run: |
        curl -vLo qt-installer.exe https://download.qt.io/official_releases/online_installers/qt-unified-windows-x64-online.exe
        .\qt-installer.exe --accept-licenses --accept-messages --accept-obligations --confirm-command --reset-qtaccount `
                            --no-default-installations `
                            install qt.qt5.5152.win64_msvc2019_64 `
                            --root "${{ env.QT_PATH }}" `
                            --email "${{ secrets.QT_INSTALLER_EMAIL }}" `
                            --pw "${{ secrets.QT_INSTALLER_PASSWORD }}"

    - name: Configure build for x64
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
    
    - name: Build project
      env:
        QT5_DIR: "${{ env.QT_PATH }}/5.15.2/msvc2019_64"
      run: |
        cmake -G "Ninja" -B build -S source-code/src -DQt5_ROOT="${{ env.QT5_DIR }}" `
                      -DCMAKE_INSTALL_PREFIX=install `
                      -DCMAKE_BUILD_TYPE=Release `
                      -DBUILD_STATIC=ON
        cd build
        ninja all install

    - uses: actions/upload-artifact@v3
      with:
        name: PropoertyBrowser4Demo-win64
        path: install/*

  ubuntu:
    runs-on: ubuntu-20.04
    env:
      QT_PATH: ${{ github.workspace }}/Qt

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: "source-code"
        submodules: recursive
  
    - name: Install Dependencies
      run: |
        sudo apt install -y libglu1-mesa-dev libssl-dev liblz4-dev liblzo2-dev libjsoncpp-dev pkg-config ninja-build
        sudo apt install -y libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libxcb-xkb1 libxkbcommon-x11-0 libxcb-randr0 libxcb-shape0
        sudo apt install -y libx11-xcb1 libxcb-randr0 libxcb-shape0 libxcb-xfixes0

    - name: Install Qt
      run: |
        curl -vLo qt-installer.run https://download.qt.io/official_releases/online_installers/qt-unified-linux-x64-online.run
        sudo chmod +x ./qt-installer.run

        export DISPLAY=:99
        sudo Xvfb -ac :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
        sleep 2

        ./qt-installer.run --accept-licenses --accept-messages --accept-obligations --confirm-command --reset-qtaccount \
                            --no-default-installations \
                            install qt.qt5.5152.gcc_64 \
                            --root "${{ env.QT_PATH }}" \
                            --email "${{ secrets.QT_INSTALLER_EMAIL }}" \
                            --pw "${{ secrets.QT_INSTALLER_PASSWORD }}"
    
    - name: Build project
      env:
        QT5_DIR: "${{ env.QT_PATH }}/5.15.2/gcc_64"
      run: |
        cmake -G "Ninja" -B build -S source-code/src -DQt5_ROOT="${{ env.QT5_DIR }}" \
                      -DCMAKE_INSTALL_PREFIX=install \
                      -DCMAKE_BUILD_TYPE=Release \
                      -DBUILD_STATIC=ON
        cd build
        ninja all install

    - uses: actions/upload-artifact@v3
      with:
        name: PropoertyBrowser4Demo-ubuntu20
        path: install/*

  macos:
    if: false
    runs-on: macos-12
    env:
      QT_PATH: ${{ github.workspace }}/Qt

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        path: "source-code"
        submodules: recursive
  
    - name: Install Dependencies
      run: |
        brew install ninja jq

    - name: Install Qt
      run: |
        curl -vLo qt-installer.dmg https://download.qt.io/official_releases/online_installers/qt-unified-mac-x64-online.dmg
        hdiutil attach ./qt-installer.dmg
        /Volumes/qt-unified-macOS-x64-4.5.1-online/qt-unified-macOS-x64-4.5.1-online.app/Contents/MacOS/qt-unified-macOS-x64-4.5.1-online \
                            --accept-licenses --accept-messages --accept-obligations --confirm-command --reset-qtaccount \
                            --no-default-installations \
                            install qt.qt5.5152.clang_64 \
                            --root "${{ env.QT_PATH }}" \
                            --email "${{ secrets.QT_INSTALLER_EMAIL }}" \
                            --pw "${{ secrets.QT_INSTALLER_PASSWORD }}"
    
    - name: Build project
      env:
        QT5_DIR: "${{ env.QT_PATH }}/5.15.2/clang_64"
      run: |
        cmake -G "Ninja" -B build -S source-code/src -DQt5_ROOT="${{ env.QT5_DIR }}" \
                          -DCMAKE_INSTALL_PREFIX=install \
                          -DCMAKE_BUILD_TYPE=Release \
                          -DBUILD_STATIC=ON \
                          -DMACOSX_DEPLOYMENT_TARGET=10.12
        cd build
        ninja all install

    - uses: actions/upload-artifact@v3
      with:
        name: PropoertyBrowser4Demo-macos
        path: install/*
